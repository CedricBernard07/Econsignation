{% extends 'base.html.twig' %}

{% block title %}Parcours{% endblock %}

{% block content %}

    <script src="{{ asset('js/pannellum.js') }}"></script>
    <link rel="stylesheet" href="{{ asset('css/pannellum.css') }}">

    <body>
    <h1>√âtape 1 : Cliquer sur le Transformateur</h1>

    <div id="response-container">
        <span id="message-box"></span>
        <a href="{{ path('app_page2') }}" id="next-button" class="next-button" style="display: none;">Passer √† l'√©tape suivante</a>
    </div>

    <div id="panorama" style="width: 100%; height: 800px;"></div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let isDragging = false;
            let viewer = pannellum.viewer('panorama', {
                "type": "equirectangular",
                "panorama": "{{ asset('models/model.jpg') }}",
                "autoLoad": true,
                "yaw": 1.5,  // Ajuste la position horizontale du hotspot
                "pitch": 3,  // Ajuste la position verticale du hotspot
                "hfov": 100, // Angle de vue initial (fix√©)
                "mouseZoom": false,
                "disableZoom": true,
                "showControls": false,
                "keyboardZoom": false,
                "hotSpots": [
                    {
                        "pitch": 6.5,
                        "yaw": 4.5,
                        "type": "custom",
                        "cssClass": "hotspot-rect",
                        "createTooltipFunc": function(hotSpotDiv, args) {
                            hotSpotDiv.classList.add("hotspot-rect");
                            hotSpotDiv.style.pointerEvents = "auto";
                            hotSpotDiv.addEventListener("click", function(event) {
                                if (!isDragging) {
                                    event.stopPropagation();
                                    showMessage("Correct", "green");
                                    updateScore('etape1');
                                }
                                // Appliquer la correction : bordure verte
                                hotSpotDiv.style.border = "5px solid green"
                            });
                        }
                    }
                ]
            });

            function showMessage(text, color) {
                let messageBox = document.getElementById("message-box");
                let nextButton = document.getElementById("next-button");

                messageBox.textContent = text;
                messageBox.style.color = color;
                nextButton.style.display = "inline-block"; // Afficher le bouton
            }

            function updateScore(etape) {
                fetch("{{ path('update_score') }}", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "X-Requested-With": "XMLHttpRequest"
                    },
                    body: JSON.stringify({ etape: etape })
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log("Score mis √† jour :", data.score);
                    })
                    .catch(error => console.error("Erreur de mise √† jour du score :", error));
            }

            document.getElementById("panorama").addEventListener("mousedown", function () {
                isDragging = false;
            });

            document.getElementById("panorama").addEventListener("mousemove", function () {
                isDragging = true;
            });

            document.getElementById("panorama").addEventListener("mouseup", function () {
                if (!isDragging) {
                    showMessage("Incorrect", "red");
                    // Appliquer la correction : bordure rouge
                    let hotSpotDiv = document.querySelector(".hotspot-rect");
                    hotSpotDiv.style.border = "5px solid red"
                }
            });
        });
    </script>

    <style>
        .hotspot-rect {
            position: absolute;
            width: 150px;
            height: 150px;
            background: transparent;
            border: 3px solid transparent; /* Bordure invisible au depart */
            pointer-events: auto;
            cursor: grab;
        }
    </style>

    {#-------------------------------------------------------#}
    {#  SECONDAIRE  emp√™cher le clic droit mene sur Pannellum#}
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let panoramaElement = document.getElementById("panorama");

            // Bloquer compl√®tement le menu contextuel Panellum
            document.addEventListener("contextmenu", function (event) {
                if (event.target.closest("#panorama")) {
                    event.preventDefault();
                }
            });

            // V√©rifier et supprimer le lien contextuel Panellum apr√®s son chargement
            function removePannellumContextMenu() {
                let pannellumMenu = document.querySelector(".pnlm-about-msg");
                if (pannellumMenu) {
                    pannellumMenu.remove(); // üîπ Supprime l'√©l√©ment affichant le lien Panellum
                }
            }

            // Attendre le chargement de Panellum et supprimer le menu
            setTimeout(removePannellumContextMenu, 500); // üîπ D√©lai pour s'assurer que Panellum est bien charg√©

            // Surveiller les changements de DOM pour d√©tecter si Panellum r√©affiche son menu
            let observer = new MutationObserver(removePannellumContextMenu);
            observer.observe(document.body, { childList: true, subtree: true });

            // D√©sactiver tous les √©v√©nements li√©s au menu contextuel
            panoramaElement.addEventListener("mousedown", function (event) {
                if (event.button === 2) { // Clic droit
                    event.preventDefault();
                }
            });

            panoramaElement.addEventListener("mouseup", function (event) {
                if (event.button === 2) {
                    event.preventDefault();
                }
            });
        });
    </script>

    </body>

{% endblock %}
