{% extends 'base.html.twig' %}

{% block title %}Parcours Page 2{% endblock %}

{% block content %}

    <script src="{{ asset('js/pannellum.js') }}"></script>
    <link rel="stylesheet" href="{{ asset('css/pannellum.css') }}">

    <body>
    <h1>Étape 2 : Sélectionner les EPI adaptés pour la manipulation</h1>

    <div id="response-container">
        <span id="message-box"></span>
        <a href="{{ path('app_page3') }}" id="next-button" class="next-button" style="display: none;">Passer à l'étape suivante</a>
    </div>

    <div id="panorama" style="width: 100%; height: 800px;"></div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let hasClicked = false; // Empêcher plusieurs clics

            let viewer = pannellum.viewer('panorama', {
                "type": "equirectangular",
                "panorama": "{{ asset('models/model.jpg') }}",
                "autoLoad": true,
                "yaw": 0,
                "pitch": 0,
                "hfov": 100,
                "hotSpots": [
                    {
                        "pitch": -10,
                        "yaw": -20,
                        "type": "custom",
                        "cssClass": "hotspot-img",
                        "createTooltipFunc": function(hotSpotDiv, args) {
                            hotSpotDiv.classList.add("hotspot-img", "correct-choice");
                            hotSpotDiv.style.backgroundImage = "url('{{ asset('images/EPI/correct.png') }}')";
                            hotSpotDiv.style.width = "80px";
                            hotSpotDiv.style.height = "80px";
                            hotSpotDiv.addEventListener("click", function () {
                                if (!hasClicked) {
                                    showMessage("Correct", "green");
                                    showBorders(); // Afficher les bordures
                                    updateEtape2("correct");
                                    hasClicked = true;
                                }
                            });
                        }
                    },
                    {
                        "pitch": -10,
                        "yaw": 20,
                        "type": "custom",
                        "cssClass": "hotspot-img",
                        "createTooltipFunc": function(hotSpotDiv, args) {
                            hotSpotDiv.classList.add("hotspot-img", "incorrect-choice");
                            hotSpotDiv.style.backgroundImage = "url('{{ asset('images/EPI/incorrect.png') }}')";
                            hotSpotDiv.style.width = "80px";
                            hotSpotDiv.style.height = "80px";
                            hotSpotDiv.addEventListener("click", function () {
                                if (!hasClicked) {
                                    showMessage("Incorrect", "red");
                                    showBorders(); // Afficher les bordures
                                    hasClicked = true;
                                }
                            });
                        }
                    }
                ]
            });

            function showMessage(text, color) {
                let messageBox = document.getElementById("message-box");
                let nextButton = document.getElementById("next-button");

                messageBox.textContent = text;
                messageBox.style.color = color;
                nextButton.style.display = "block"; // Afficher le bouton suivant
            }

            function updateEtape2() {
                fetch("{{ path('update_score') }}", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "X-Requested-With": "XMLHttpRequest"
                    },
                    body: JSON.stringify({ etape: "etape2" })
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log("Score mis à jour :", data.score);
                    })
                    .catch(error => console.error("Erreur de mise à jour du score :", error));
            }

            function showBorders() {
                // Ajouter la bordure verte à l'image correcte
                document.querySelector(".correct-choice").classList.add("correct-answer");

                // Ajouter la bordure rouge à l'image incorrecte
                document.querySelector(".incorrect-choice").classList.add("incorrect-answer");
            }
        });
    </script>



    </body>

    <style>
        .hotspot-img {
            width: 200px !important; /* Taille ajustée pour éviter le recadrage */
            height: 200px !important;
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
            cursor: pointer;
            transition: transform 0.2s;
        }

        .hotspot-img:hover {
            transform: scale(1.1); /* Effet de zoom au survol */
        }

        /* Bordure verte pour la bonne réponse */
        .correct-answer {
            border: 5px solid green !important;
            border-radius: 10px;
        }

        /* Bordure rouge pour la mauvaise réponse */
        .incorrect-answer {
            border: 5px solid red !important;
            border-radius: 10px;
        }



    </style>

{% endblock %}
