{% extends 'base.html.twig' %}

{% block title %}Visualisation 360Â°{% endblock %}

{% block content %}

    <script src="{{ asset('js/pannellum.js') }}"></script>
    <link rel="stylesheet" href="{{ asset('css/pannellum.css') }}">

    <body>
    <div id="panorama" style="width: 100%; height: 800px;"></div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // variables pour les deplacements
            let isDragging = false;
            let startMouseX, startMouseY;
            let currentYaw = 30;
            let currentPitch = 0;


            let viewer = pannellum.viewer('panorama', {
                "type": "equirectangular",
                "panorama": "{{ asset('models/model.jpg') }}",
                "autoLoad": true,
                "yaw": 0,
                "pitch": 0,
                "hfov": 100,
                "hotSpots": [
                    {
                        // le texte
                        "pitch": 12.5,
                        "yaw": 0,
                        "type": "custom",
                        "createTooltipFunc": hotspotText,
                        "createTooltipArgs": "Transformateur \nHTB => HTA"
                    },
                    {
                        // la barre mobile
                        "pitch": currentPitch,
                        "yaw": currentYaw,
                        "type": "custom",
                        "cssClass": "slider-bar",
                        "createTooltipFunc": createSliderBar,
                        "createTooltipArgs": {}
                    }
                ]
            });

            /* Fonction pour afficher le texte */
            function hotspotText(hotSpotDiv, args) {
                hotSpotDiv.classList.add('hotspot-text');
                hotSpotDiv.innerHTML = args.replace(/\n/g, "<br>");
            }

            /* Fonction pour crÃ©er la barre mobile */
            function createSliderBar(hotSpotDiv) {
                hotSpotDiv.classList.add('slider-bar');

                hotSpotDiv.addEventListener('mousedown', function (event) {
                    isDragging = true;
                    startMouseX = event.clientX;
                    startMouseY = event.clientY;
                    event.stopPropagation();
                });

                document.addEventListener('mousemove', function (event) {
                    if (!isDragging) return;

                    let deltaX = event.clientX - startMouseX;
                    let deltaY = event.clientY - startMouseY;

                    let yawDelta = deltaX * 0.1;
                    let pitchDelta = -deltaY * 0.1;

                    currentYaw += yawDelta;
                    currentPitch += pitchDelta;

                    currentPitch = Math.max(-90, Math.min(90, currentPitch));
                    currentYaw = ((currentYaw + 180) % 360) - 180;

                    startMouseX = event.clientX;
                    startMouseY = event.clientY;

                    updateHotSpot(currentYaw, currentPitch);
                });

                document.addEventListener('mouseup', function () {
                    isDragging = false;
                });
            }

            /*  Fonction qui met Ã  jour la position du hotspot */
            function updateHotSpot(yaw, pitch) {
                let hotSpots = viewer.getConfig().hotSpots;
                for (let i = 0; i < hotSpots.length; i++) {
                    if (hotSpots[i].cssClass === "slider-bar") {
                        hotSpots[i].yaw = yaw;
                        hotSpots[i].pitch = pitch;
                    }
                }
                viewer.setYaw(yaw);
                viewer.setPitch(pitch);
            }

            /* Suivre la navigation Panellum */
            viewer.on('animate', function () {
                updateHotSpot(currentYaw, currentPitch);
            });

        });
    </script>

    <style>
        /* Barre mobile */
        .slider-bar {
            width: 5px;
            height: 220px;
            background: red;
            cursor: grab;
            border-radius: 2px;
        }

        /*  Style du hotspot texte */
        .hotspot-text {
            background: none;
            padding: 0;
            font-size: 18px;
            font-weight: bold;
            color: white; /* âœ… Change la couleur si besoin */
            text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.8); /* Ajoute un effet dâ€™ombre pour la lisibilitÃ© */
            white-space: nowrap; /* ðŸ”¹ EmpÃªche le texte de passer Ã  la ligne (sauf ceux imposÃ©s avec \n */
        }

    </style>


    </body>

{% endblock %}
